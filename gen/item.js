/* Generated by SharpKit 5 v5.4.4 */
if (typeof ($Inherit) == 'undefined') {
	var $Inherit = function (ce, ce2) {

		if (typeof (Object.getOwnPropertyNames) == 'undefined') {

			for (var p in ce2.prototype)
				if (typeof (ce.prototype[p]) == 'undefined' || ce.prototype[p] == Object.prototype[p])
					ce.prototype[p] = ce2.prototype[p];
			for (var p in ce2)
				if (typeof (ce[p]) == 'undefined')
					ce[p] = ce2[p];
			ce.$baseCtor = ce2;

		} else {

			var props = Object.getOwnPropertyNames(ce2.prototype);
			for (var i = 0; i < props.length; i++)
				if (typeof (Object.getOwnPropertyDescriptor(ce.prototype, props[i])) == 'undefined')
					Object.defineProperty(ce.prototype, props[i], Object.getOwnPropertyDescriptor(ce2.prototype, props[i]));

			for (var p in ce2)
				if (typeof (ce[p]) == 'undefined')
					ce[p] = ce2[p];
			ce.$baseCtor = ce2;

		}

	}
};

if (typeof ($CreateAnonymousDelegate) == 'undefined') {
    var $CreateAnonymousDelegate = function (target, func) {
        if (target == null || func == null)
            return func;
        var delegate = function () {
            return func.apply(target, arguments);
        };
        delegate.func = func;
        delegate.target = target;
        delegate.isDelegate = true;
        return delegate;
    }
}


if (typeof(SharpKitWebApp) == "undefined")
    var SharpKitWebApp = {};
SharpKitWebApp.itemBase = function (type, x, y, f){
    this.__div = null;
    this._fixed = false;
    this._type = null;
    this.__id = null;
    this._x = 0;
    this._y = 0;
    this._x = x;
    this._y = y;
    this._type = type;
    this._fixed = f;
    this.__id = js.generateId();
    this.__div = document.createElement('div');
    this.__div.setAttribute("id", this.__id);
    js.addClass(this.__div, "item");
};
SharpKitWebApp.itemBase.xMin = -20;
SharpKitWebApp.itemBase.yMin = -20;
SharpKitWebApp.itemBase.xMed = 30;
SharpKitWebApp.itemBase.yMed = 30;
SharpKitWebApp.itemBase.xMax = 80;
SharpKitWebApp.itemBase.yMax = 80;
SharpKitWebApp.itemBase.prototype.render = function (parent){
    parent.appendChild(this.__div);
    this.invalidate();
};
SharpKitWebApp.itemBase.prototype.moveLeft = function (){
    this._x--;
    this.invalidate();
};
SharpKitWebApp.itemBase.prototype.moveRight = function (){
    this._x++;
    this.invalidate();
};
SharpKitWebApp.itemBase.prototype.moveUp = function (){
    this._y--;
    this.invalidate();
};
SharpKitWebApp.itemBase.prototype.moveDown = function (){
    this._y++;
    this.invalidate();
};
SharpKitWebApp.itemBase.prototype.getType = function (){
    return this._type;
};
SharpKitWebApp.itemBase.prototype.getDiv = function (){
    return this.__div;
};
SharpKitWebApp.itemBase.prototype.isFixed = function (){
    return this._fixed;
};
SharpKitWebApp.itemBase.prototype.isStartItem = function (){
    return false;
};
SharpKitWebApp.itemBase.prototype.isFinishItem = function (){
    return false;
};
SharpKitWebApp.itemBase.prototype.moveBall = function (ball, callback){
    js.assert(false);
};
SharpKitWebApp.itemBase.prototype.hasSide = function (slide){
    js.assert(false);
    return false;
};
SharpKitWebApp.itemBase.prototype.serealize = function (){
};
SharpKitWebApp.itemBase.prototype.getId = function (){
    return this.__id;
};
SharpKitWebApp.itemBase.prototype.moveTo = function (x, y){
    this._x = x;
    this._y = y;
    this.invalidate();
};
SharpKitWebApp.itemBase.prototype.getX = function (){
    return this._x;
};
SharpKitWebApp.itemBase.prototype.getY = function (){
    return this._y;
};
SharpKitWebApp.itemBase.prototype.invalidate = function (){
    this.getDiv().style.left = (this._x * (10)) + "em";
    this.getDiv().style.top = (this._y * (10)) + "em";
};
SharpKitWebApp.itemBase.prototype._moveBallInternal = function (b, points, callback){
    var self = this;
    var point = points.pop();
    if (point != null){
        b.getDiv().style.left = point.get_x() + "%";
        b.getDiv().style.top = point.get_y() + "%";
        if (point.get_inSide() != SharpKitWebApp.ESlide.none){
            b.setInSide(point.get_inSide());
        }
        window.setTimeout($CreateAnonymousDelegate(this, function (){
            self._moveBallInternal(b, points, callback);
        }), 50);
    }
    else {
        callback();
    }
};
SharpKitWebApp.itemBase.prototype.showBall = function (ball, callback){
};
SharpKitWebApp.leftToBottomItem = function (type, x, y, f){
    SharpKitWebApp.itemBase.call(this, type, x, y, f);
    if (!this.isFixed()){
        js.addClass(this.getDiv(), "leftToBottomItem");
    }
    else {
        js.addClass(this.getDiv(), "leftToBottomItemFixed");
    }
};
SharpKitWebApp.leftToBottomItem.prototype.hasSide = function (slide){
    var res = (slide == SharpKitWebApp.ESlide.left) || (slide == SharpKitWebApp.ESlide.bottom);
    return res;
};
SharpKitWebApp.leftToBottomItem.prototype.getSlides = function (){
    var res =  [SharpKitWebApp.ESlide.left, SharpKitWebApp.ESlide.bottom];
    return res;
};
SharpKitWebApp.leftToBottomItem.prototype.showBall = function (ball, callback){
    var self = this;
    var div = this.getDiv();
    if (ball.getInSide() == SharpKitWebApp.ESlide.left){
        div.appendChild(ball.getDiv());
        ball.getDiv().style.left = SharpKitWebApp.itemBase.xMin + "%";
        ball.getDiv().style.top = SharpKitWebApp.itemBase.yMed + "%";
    }
    else if (ball.getInSide() == SharpKitWebApp.ESlide.bottom){
        div.appendChild(ball.getDiv());
        ball.getDiv().style.left = SharpKitWebApp.itemBase.xMed + "%";
        ball.getDiv().style.top = SharpKitWebApp.itemBase.yMax + "%";
    }
};
SharpKitWebApp.leftToBottomItem.prototype.moveBall = function (ball, callback){
    var self = this;
    var points =  [];
    points.push((function (){
        var $v1 = new SharpKitWebApp.point();
        $v1.set_x(SharpKitWebApp.itemBase.xMin);
        $v1.set_y(SharpKitWebApp.itemBase.yMed);
        $v1.set_inSide(SharpKitWebApp.ESlide.left);
        return $v1;
    }).call(this));
    for (var x = SharpKitWebApp.itemBase.xMin + 1; x < SharpKitWebApp.itemBase.xMed; ++x){
        points.push((function (){
            var $v2 = new SharpKitWebApp.point();
            $v2.set_x(x);
            $v2.set_y(SharpKitWebApp.itemBase.yMed);
            return $v2;
        }).call(this));
    }
    for (var y = SharpKitWebApp.itemBase.yMed; y < SharpKitWebApp.itemBase.yMax; ++y){
        points.push((function (){
            var $v3 = new SharpKitWebApp.point();
            $v3.set_x(SharpKitWebApp.itemBase.xMed);
            $v3.set_y(y);
            return $v3;
        }).call(this));
    }
    points.push((function (){
        var $v4 = new SharpKitWebApp.point();
        $v4.set_x(SharpKitWebApp.itemBase.xMed);
        $v4.set_y(SharpKitWebApp.itemBase.yMax);
        $v4.set_inSide(SharpKitWebApp.ESlide.bottom);
        return $v4;
    }).call(this));
    var div = this.getDiv();
    if (ball.getInSide() == SharpKitWebApp.ESlide.left){
        div.appendChild(ball.getDiv());
        points = points.reverse();
        this._moveBallInternal(ball, points, callback);
    }
    else if (ball.getInSide() == SharpKitWebApp.ESlide.bottom){
        div.appendChild(ball.getDiv());
        this._moveBallInternal(ball, points, callback);
    }
};
$Inherit(SharpKitWebApp.leftToBottomItem, SharpKitWebApp.itemBase);
SharpKitWebApp.leftToRightItem = function (type, x, y, f){
    SharpKitWebApp.itemBase.call(this, type, x, y, f);
    if (!this.isFixed()){
        js.addClass(this.getDiv(), "leftToRightItem");
    }
    else {
        js.addClass(this.getDiv(), "leftToRightItemFixed");
    }
};
SharpKitWebApp.leftToRightItem.prototype.hasSide = function (slide){
    var res = (slide == SharpKitWebApp.ESlide.left) || (slide == SharpKitWebApp.ESlide.right);
    return res;
};
SharpKitWebApp.leftToRightItem.prototype.getSlides = function (){
    var res =  [SharpKitWebApp.ESlide.left, SharpKitWebApp.ESlide.right];
    return res;
};
SharpKitWebApp.leftToRightItem.prototype.showBall = function (ball, callback){
    var self = this;
    var div = this.getDiv();
    if (ball.getInSide() == SharpKitWebApp.ESlide.left){
        div.appendChild(ball.getDiv());
        ball.getDiv().style.left = SharpKitWebApp.itemBase.xMin + "%";
        ball.getDiv().style.top = SharpKitWebApp.itemBase.yMed + "%";
    }
    else if (ball.getInSide() == SharpKitWebApp.ESlide.right){
        div.appendChild(ball.getDiv());
        ball.getDiv().style.left = SharpKitWebApp.itemBase.xMax + "%";
        ball.getDiv().style.top = SharpKitWebApp.itemBase.yMed + "%";
    }
};
SharpKitWebApp.leftToRightItem.prototype.moveBall = function (ball, callback){
    var self = this;
    var points =  [];
    points.push((function (){
        var $v5 = new SharpKitWebApp.point();
        $v5.set_x(SharpKitWebApp.itemBase.xMin);
        $v5.set_y(SharpKitWebApp.itemBase.yMed);
        $v5.set_inSide(SharpKitWebApp.ESlide.left);
        return $v5;
    }).call(this));
    for (var x = SharpKitWebApp.itemBase.xMin + 1; x < SharpKitWebApp.itemBase.xMax; ++x){
        points.push((function (){
            var $v6 = new SharpKitWebApp.point();
            $v6.set_x(x);
            $v6.set_y(SharpKitWebApp.itemBase.yMed);
            return $v6;
        }).call(this));
    }
    points.push((function (){
        var $v7 = new SharpKitWebApp.point();
        $v7.set_x(SharpKitWebApp.itemBase.xMax);
        $v7.set_y(SharpKitWebApp.itemBase.yMed);
        $v7.set_inSide(SharpKitWebApp.ESlide.right);
        return $v7;
    }).call(this));
    var div = this.getDiv();
    if (ball.getInSide() == SharpKitWebApp.ESlide.left){
        div.appendChild(ball.getDiv());
        points = points.reverse();
        this._moveBallInternal(ball, points, callback);
    }
    else if (ball.getInSide() == SharpKitWebApp.ESlide.right){
        div.appendChild(ball.getDiv());
        this._moveBallInternal(ball, points, callback);
    }
};
$Inherit(SharpKitWebApp.leftToRightItem, SharpKitWebApp.itemBase);
SharpKitWebApp.rightToBottomItem = function (type, x, y, f){
    SharpKitWebApp.itemBase.call(this, type, x, y, f);
    if (!this.isFixed()){
        js.addClass(this.getDiv(), "rightToBottomItem");
    }
    else {
        js.addClass(this.getDiv(), "rightToBottomItemFixed");
    }
};
SharpKitWebApp.rightToBottomItem.prototype.hasSide = function (slide){
    var res = (slide == SharpKitWebApp.ESlide.right) || (slide == SharpKitWebApp.ESlide.bottom);
    return res;
};
SharpKitWebApp.rightToBottomItem.prototype.getSlides = function (){
    var res =  [SharpKitWebApp.ESlide.right, SharpKitWebApp.ESlide.bottom];
    return res;
};
SharpKitWebApp.rightToBottomItem.prototype.showBall = function (ball, callback){
    var self = this;
    var div = this.getDiv();
    if (ball.getInSide() == SharpKitWebApp.ESlide.right){
        div.appendChild(ball.getDiv());
        ball.getDiv().style.left = SharpKitWebApp.itemBase.xMax + "%";
        ball.getDiv().style.top = SharpKitWebApp.itemBase.yMed + "%";
    }
    else if (ball.getInSide() == SharpKitWebApp.ESlide.bottom){
        div.appendChild(ball.getDiv());
        ball.getDiv().style.left = SharpKitWebApp.itemBase.xMed + "%";
        ball.getDiv().style.top = SharpKitWebApp.itemBase.yMax + "%";
    }
};
SharpKitWebApp.rightToBottomItem.prototype.moveBall = function (ball, callback){
    var self = this;
    var points =  [];
    points.push((function (){
        var $v8 = new SharpKitWebApp.point();
        $v8.set_x(SharpKitWebApp.itemBase.xMax);
        $v8.set_y(SharpKitWebApp.itemBase.yMed);
        $v8.set_inSide(SharpKitWebApp.ESlide.right);
        return $v8;
    }).call(this));
    for (var x = SharpKitWebApp.itemBase.xMax - 1; x > SharpKitWebApp.itemBase.xMed; --x){
        points.push((function (){
            var $v9 = new SharpKitWebApp.point();
            $v9.set_x(x);
            $v9.set_y(SharpKitWebApp.itemBase.yMed);
            return $v9;
        }).call(this));
    }
    for (var y = SharpKitWebApp.itemBase.yMed; y < SharpKitWebApp.itemBase.yMax; ++y){
        points.push((function (){
            var $v10 = new SharpKitWebApp.point();
            $v10.set_x(SharpKitWebApp.itemBase.xMed);
            $v10.set_y(y);
            return $v10;
        }).call(this));
    }
    points.push((function (){
        var $v11 = new SharpKitWebApp.point();
        $v11.set_x(SharpKitWebApp.itemBase.xMed);
        $v11.set_y(SharpKitWebApp.itemBase.yMax);
        $v11.set_inSide(SharpKitWebApp.ESlide.bottom);
        return $v11;
    }).call(this));
    var div = this.getDiv();
    if (ball.getInSide() == SharpKitWebApp.ESlide.right){
        div.appendChild(ball.getDiv());
        points = points.reverse();
        this._moveBallInternal(ball, points, callback);
    }
    else if (ball.getInSide() == SharpKitWebApp.ESlide.bottom){
        div.appendChild(ball.getDiv());
        this._moveBallInternal(ball, points, callback);
    }
};
$Inherit(SharpKitWebApp.rightToBottomItem, SharpKitWebApp.itemBase);
SharpKitWebApp.topToBottomItem = function (type, x, y, f){
    SharpKitWebApp.itemBase.call(this, type, x, y, f);
    if (!this.isFixed()){
        js.addClass(this.getDiv(), "topToBottomItem");
    }
    else {
        js.addClass(this.getDiv(), "topToBottomItemFixed");
    }
};
SharpKitWebApp.topToBottomItem.prototype.hasSide = function (slide){
    var res = (slide == SharpKitWebApp.ESlide.top) || (slide == SharpKitWebApp.ESlide.bottom);
    return res;
};
SharpKitWebApp.topToBottomItem.prototype.getSlides = function (){
    var res =  [SharpKitWebApp.ESlide.top, SharpKitWebApp.ESlide.bottom];
    return res;
};
SharpKitWebApp.topToBottomItem.prototype.showBall = function (ball, callback){
    var self = this;
    var div = this.getDiv();
    if (ball.getInSide() == SharpKitWebApp.ESlide.top){
        div.appendChild(ball.getDiv());
        ball.getDiv().style.left = SharpKitWebApp.itemBase.xMed + "%";
        ball.getDiv().style.top = SharpKitWebApp.itemBase.yMin + "%";
    }
    else if (ball.getInSide() == SharpKitWebApp.ESlide.bottom){
        div.appendChild(ball.getDiv());
        ball.getDiv().style.left = SharpKitWebApp.itemBase.xMed + "%";
        ball.getDiv().style.top = SharpKitWebApp.itemBase.yMax + "%";
    }
};
SharpKitWebApp.topToBottomItem.prototype.moveBall = function (ball, callback){
    var self = this;
    var points =  [];
    points.push((function (){
        var $v12 = new SharpKitWebApp.point();
        $v12.set_x(SharpKitWebApp.itemBase.xMed);
        $v12.set_y(SharpKitWebApp.itemBase.yMin);
        $v12.set_inSide(SharpKitWebApp.ESlide.top);
        return $v12;
    }).call(this));
    for (var y = SharpKitWebApp.itemBase.yMin + 1; y < SharpKitWebApp.itemBase.yMax; ++y){
        points.push((function (){
            var $v13 = new SharpKitWebApp.point();
            $v13.set_x(SharpKitWebApp.itemBase.xMed);
            $v13.set_y(y);
            return $v13;
        }).call(this));
    }
    points.push((function (){
        var $v14 = new SharpKitWebApp.point();
        $v14.set_x(SharpKitWebApp.itemBase.xMed);
        $v14.set_y(SharpKitWebApp.itemBase.yMax);
        $v14.set_inSide(SharpKitWebApp.ESlide.bottom);
        return $v14;
    }).call(this));
    var div = this.getDiv();
    if (ball.getInSide() == SharpKitWebApp.ESlide.top){
        div.appendChild(ball.getDiv());
        points = points.reverse();
        this._moveBallInternal(ball, points, callback);
    }
    else if (ball.getInSide() == SharpKitWebApp.ESlide.bottom){
        div.appendChild(ball.getDiv());
        this._moveBallInternal(ball, points, callback);
    }
};
$Inherit(SharpKitWebApp.topToBottomItem, SharpKitWebApp.itemBase);
SharpKitWebApp.topToLeftItem = function (type, x, y, f){
    SharpKitWebApp.itemBase.call(this, type, x, y, f);
    if (!this.isFixed()){
        js.addClass(this.getDiv(), "topToLeftItem");
    }
    else {
        js.addClass(this.getDiv(), "topToLeftItemFixed");
    }
};
SharpKitWebApp.topToLeftItem.prototype.hasSide = function (slide){
    var res = (slide == SharpKitWebApp.ESlide.top) || (slide == SharpKitWebApp.ESlide.left);
    return res;
};
SharpKitWebApp.topToLeftItem.prototype.getSlides = function (){
    var res =  [SharpKitWebApp.ESlide.top, SharpKitWebApp.ESlide.left];
    return res;
};
SharpKitWebApp.topToLeftItem.prototype.showBall = function (ball, callback){
    var self = this;
    var div = this.getDiv();
    if (ball.getInSide() == SharpKitWebApp.ESlide.top){
        div.appendChild(ball.getDiv());
        ball.getDiv().style.left = SharpKitWebApp.itemBase.xMed + "%";
        ball.getDiv().style.top = SharpKitWebApp.itemBase.yMin + "%";
    }
    else if (ball.getInSide() == SharpKitWebApp.ESlide.left){
        div.appendChild(ball.getDiv());
        ball.getDiv().style.left = SharpKitWebApp.itemBase.xMin + "%";
        ball.getDiv().style.top = SharpKitWebApp.itemBase.yMed + "%";
    }
};
SharpKitWebApp.topToLeftItem.prototype.moveBall = function (ball, callback){
    var self = this;
    var points =  [];
    points.push((function (){
        var $v15 = new SharpKitWebApp.point();
        $v15.set_x(SharpKitWebApp.itemBase.xMed);
        $v15.set_y(SharpKitWebApp.itemBase.yMin);
        $v15.set_inSide(SharpKitWebApp.ESlide.top);
        return $v15;
    }).call(this));
    for (var y = SharpKitWebApp.itemBase.yMin + 1; y < SharpKitWebApp.itemBase.yMed; ++y){
        points.push((function (){
            var $v16 = new SharpKitWebApp.point();
            $v16.set_x(SharpKitWebApp.itemBase.xMed);
            $v16.set_y(y);
            return $v16;
        }).call(this));
    }
    for (var x = SharpKitWebApp.itemBase.xMed; x > SharpKitWebApp.itemBase.xMin; --x){
        points.push((function (){
            var $v17 = new SharpKitWebApp.point();
            $v17.set_x(x);
            $v17.set_y(SharpKitWebApp.itemBase.yMed);
            return $v17;
        }).call(this));
    }
    points.push((function (){
        var $v18 = new SharpKitWebApp.point();
        $v18.set_x(SharpKitWebApp.itemBase.xMin);
        $v18.set_y(SharpKitWebApp.itemBase.yMed);
        $v18.set_inSide(SharpKitWebApp.ESlide.left);
        return $v18;
    }).call(this));
    var div = this.getDiv();
    if (ball.getInSide() == SharpKitWebApp.ESlide.top){
        div.appendChild(ball.getDiv());
        points = points.reverse();
        this._moveBallInternal(ball, points, callback);
    }
    else if (ball.getInSide() == SharpKitWebApp.ESlide.left){
        div.appendChild(ball.getDiv());
        this._moveBallInternal(ball, points, callback);
    }
    else {
        js.assert(false);
    }
};
$Inherit(SharpKitWebApp.topToLeftItem, SharpKitWebApp.itemBase);
SharpKitWebApp.topToRightItem = function (type, x, y, f){
    SharpKitWebApp.itemBase.call(this, type, x, y, f);
    if (!this.isFixed()){
        js.addClass(this.getDiv(), "topToRightItem");
    }
    else {
        js.addClass(this.getDiv(), "topToRightItemFixed");
    }
};
SharpKitWebApp.topToRightItem.prototype.hasSide = function (slide){
    var res = (slide == SharpKitWebApp.ESlide.top) || (slide == SharpKitWebApp.ESlide.right);
    return res;
};
SharpKitWebApp.topToRightItem.prototype.getSlides = function (){
    var res =  [SharpKitWebApp.ESlide.top, SharpKitWebApp.ESlide.right];
    return res;
};
SharpKitWebApp.topToRightItem.prototype.showBall = function (ball, callback){
    var self = this;
    var div = this.getDiv();
    if (ball.getInSide() == SharpKitWebApp.ESlide.top){
        div.appendChild(ball.getDiv());
        ball.getDiv().style.left = SharpKitWebApp.itemBase.xMed + "%";
        ball.getDiv().style.top = SharpKitWebApp.itemBase.yMin + "%";
    }
    else if (ball.getInSide() == SharpKitWebApp.ESlide.right){
        div.appendChild(ball.getDiv());
        ball.getDiv().style.left = SharpKitWebApp.itemBase.xMax + "%";
        ball.getDiv().style.top = SharpKitWebApp.itemBase.yMed + "%";
    }
};
SharpKitWebApp.topToRightItem.prototype.moveBall = function (ball, callback){
    var self = this;
    var points =  [];
    points.push((function (){
        var $v19 = new SharpKitWebApp.point();
        $v19.set_x(SharpKitWebApp.itemBase.xMed);
        $v19.set_y(SharpKitWebApp.itemBase.yMin);
        $v19.set_inSide(SharpKitWebApp.ESlide.top);
        return $v19;
    }).call(this));
    for (var y = SharpKitWebApp.itemBase.yMin + 1; y < SharpKitWebApp.itemBase.yMed; ++y){
        points.push((function (){
            var $v20 = new SharpKitWebApp.point();
            $v20.set_x(SharpKitWebApp.itemBase.xMed);
            $v20.set_y(y);
            return $v20;
        }).call(this));
    }
    for (var x = SharpKitWebApp.itemBase.xMed; x < SharpKitWebApp.itemBase.xMax; ++x){
        points.push((function (){
            var $v21 = new SharpKitWebApp.point();
            $v21.set_x(x);
            $v21.set_y(SharpKitWebApp.itemBase.yMed);
            return $v21;
        }).call(this));
    }
    points.push((function (){
        var $v22 = new SharpKitWebApp.point();
        $v22.set_x(SharpKitWebApp.itemBase.xMax);
        $v22.set_y(SharpKitWebApp.itemBase.yMed);
        $v22.set_inSide(SharpKitWebApp.ESlide.right);
        return $v22;
    }).call(this));
    var div = this.getDiv();
    if (ball.getInSide() == SharpKitWebApp.ESlide.top){
        div.appendChild(ball.getDiv());
        points = points.reverse();
        this._moveBallInternal(ball, points, callback);
    }
    else if (ball.getInSide() == SharpKitWebApp.ESlide.right){
        div.appendChild(ball.getDiv());
        this._moveBallInternal(ball, points, callback);
    }
    else {
        js.assert(false);
    }
};
$Inherit(SharpKitWebApp.topToRightItem, SharpKitWebApp.itemBase);
SharpKitWebApp.startItemBase = function (type, x, y, f){
    SharpKitWebApp.itemBase.call(this, type, x, y, f);
    js.addClass(this.getDiv(), "startItem");
};
SharpKitWebApp.startItemBase.prototype.showBall = function (ball, callback){
    var self = this;
    var div = this.getDiv();
    div.appendChild(ball.getDiv());
    ball.getDiv().style.left = SharpKitWebApp.itemBase.xMed + "%";
    ball.getDiv().style.top = SharpKitWebApp.itemBase.yMed + "%";
};
SharpKitWebApp.startItemBase.prototype.isStartItem = function (){
    return true;
};
$Inherit(SharpKitWebApp.startItemBase, SharpKitWebApp.itemBase);
SharpKitWebApp.startLeftItem = function (type, x, y, f){
    SharpKitWebApp.startItemBase.call(this, type, x, y, f);
    js.addClass(this.getDiv(), "startLeftItem");
};
SharpKitWebApp.startLeftItem.prototype.hasSide = function (slide){
    var res = (slide == SharpKitWebApp.ESlide.left);
    return res;
};
SharpKitWebApp.startLeftItem.prototype.getSlides = function (){
    var res =  [SharpKitWebApp.ESlide.left];
    return res;
};
SharpKitWebApp.startLeftItem.prototype.moveBall = function (ball, callback){
    var self = this;
    var points =  [];
    points.push((function (){
        var $v23 = new SharpKitWebApp.point();
        $v23.set_x(SharpKitWebApp.itemBase.xMed);
        $v23.set_y(SharpKitWebApp.itemBase.yMed);
        $v23.set_inSide(SharpKitWebApp.ESlide.center);
        return $v23;
    }).call(this));
    for (var x = SharpKitWebApp.itemBase.xMed - 1; x > SharpKitWebApp.itemBase.xMin; x--){
        points.push((function (){
            var $v24 = new SharpKitWebApp.point();
            $v24.set_x(x);
            $v24.set_y(SharpKitWebApp.itemBase.yMed);
            return $v24;
        }).call(this));
    }
    points.push((function (){
        var $v25 = new SharpKitWebApp.point();
        $v25.set_x(SharpKitWebApp.itemBase.xMin);
        $v25.set_y(SharpKitWebApp.itemBase.yMed);
        $v25.set_inSide(SharpKitWebApp.ESlide.left);
        return $v25;
    }).call(this));
    points = points.reverse();
    var div = this.getDiv();
    div.appendChild(ball.getDiv());
    this._moveBallInternal(ball, points, callback);
};
$Inherit(SharpKitWebApp.startLeftItem, SharpKitWebApp.startItemBase);
SharpKitWebApp.startRightItem = function (type, x, y, f){
    SharpKitWebApp.startItemBase.call(this, type, x, y, f);
    js.addClass(this.getDiv(), "startRightItem");
};
SharpKitWebApp.startRightItem.prototype.hasSide = function (slide){
    var res = (slide == SharpKitWebApp.ESlide.right);
    return res;
};
SharpKitWebApp.startRightItem.prototype.getSlides = function (){
    var res =  [SharpKitWebApp.ESlide.right];
    return res;
};
SharpKitWebApp.startRightItem.prototype.moveBall = function (ball, callback){
    var self = this;
    var points =  [];
    points.push((function (){
        var $v26 = new SharpKitWebApp.point();
        $v26.set_x(SharpKitWebApp.itemBase.xMed);
        $v26.set_y(SharpKitWebApp.itemBase.yMed);
        $v26.set_inSide(SharpKitWebApp.ESlide.center);
        return $v26;
    }).call(this));
    for (var x = SharpKitWebApp.itemBase.xMed + 1; x < SharpKitWebApp.itemBase.xMax; x++){
        points.push((function (){
            var $v27 = new SharpKitWebApp.point();
            $v27.set_x(x);
            $v27.set_y(SharpKitWebApp.itemBase.yMed);
            return $v27;
        }).call(this));
    }
    points.push((function (){
        var $v28 = new SharpKitWebApp.point();
        $v28.set_x(SharpKitWebApp.itemBase.xMax);
        $v28.set_y(SharpKitWebApp.itemBase.yMed);
        $v28.set_inSide(SharpKitWebApp.ESlide.right);
        return $v28;
    }).call(this));
    points = points.reverse();
    var div = this.getDiv();
    div.appendChild(ball.getDiv());
    this._moveBallInternal(ball, points, callback);
};
$Inherit(SharpKitWebApp.startRightItem, SharpKitWebApp.startItemBase);
SharpKitWebApp.startTopItem = function (type, x, y, f){
    SharpKitWebApp.startItemBase.call(this, type, x, y, f);
    js.addClass(this.getDiv(), "startTopItem");
};
SharpKitWebApp.startTopItem.prototype.hasSide = function (slide){
    var res = (slide == SharpKitWebApp.ESlide.top);
    return res;
};
SharpKitWebApp.startTopItem.prototype.getSlides = function (){
    var res =  [SharpKitWebApp.ESlide.top];
    return res;
};
SharpKitWebApp.startTopItem.prototype.moveBall = function (ball, callback){
    var self = this;
    var points =  [];
    points.push((function (){
        var $v29 = new SharpKitWebApp.point();
        $v29.set_x(SharpKitWebApp.itemBase.xMed);
        $v29.set_y(SharpKitWebApp.itemBase.yMed);
        $v29.set_inSide(SharpKitWebApp.ESlide.center);
        return $v29;
    }).call(this));
    for (var y = SharpKitWebApp.itemBase.yMed; y > SharpKitWebApp.itemBase.yMin; --y){
        points.push((function (){
            var $v30 = new SharpKitWebApp.point();
            $v30.set_x(SharpKitWebApp.itemBase.xMed);
            $v30.set_y(y);
            return $v30;
        }).call(this));
    }
    points.push((function (){
        var $v31 = new SharpKitWebApp.point();
        $v31.set_x(SharpKitWebApp.itemBase.xMed);
        $v31.set_y(SharpKitWebApp.itemBase.yMin);
        $v31.set_inSide(SharpKitWebApp.ESlide.top);
        return $v31;
    }).call(this));
    points = points.reverse();
    var div = this.getDiv();
    div.appendChild(ball.getDiv());
    this._moveBallInternal(ball, points, callback);
};
$Inherit(SharpKitWebApp.startTopItem, SharpKitWebApp.startItemBase);
SharpKitWebApp.startBottomItem = function (type, x, y, f){
    SharpKitWebApp.startItemBase.call(this, type, x, y, f);
    js.addClass(this.getDiv(), "startBottomItem");
};
SharpKitWebApp.startBottomItem.prototype.hasSide = function (slide){
    var res = (slide == SharpKitWebApp.ESlide.bottom);
    return res;
};
SharpKitWebApp.startBottomItem.prototype.getSlides = function (){
    var res =  [SharpKitWebApp.ESlide.bottom];
    return res;
};
SharpKitWebApp.startBottomItem.prototype.moveBall = function (ball, callback){
    var self = this;
    var points =  [];
    points.push((function (){
        var $v32 = new SharpKitWebApp.point();
        $v32.set_x(SharpKitWebApp.itemBase.xMed);
        $v32.set_y(SharpKitWebApp.itemBase.yMed);
        $v32.set_inSide(SharpKitWebApp.ESlide.center);
        return $v32;
    }).call(this));
    for (var y = SharpKitWebApp.itemBase.yMed; y < SharpKitWebApp.itemBase.yMax; ++y){
        points.push((function (){
            var $v33 = new SharpKitWebApp.point();
            $v33.set_x(SharpKitWebApp.itemBase.xMed);
            $v33.set_y(y);
            return $v33;
        }).call(this));
    }
    points.push((function (){
        var $v34 = new SharpKitWebApp.point();
        $v34.set_x(SharpKitWebApp.itemBase.xMed);
        $v34.set_y(SharpKitWebApp.itemBase.yMax);
        $v34.set_inSide(SharpKitWebApp.ESlide.bottom);
        return $v34;
    }).call(this));
    points = points.reverse();
    var div = this.getDiv();
    div.appendChild(ball.getDiv());
    this._moveBallInternal(ball, points, callback);
};
$Inherit(SharpKitWebApp.startBottomItem, SharpKitWebApp.startItemBase);
SharpKitWebApp.finishItemBase = function (type, x, y, f){
    SharpKitWebApp.itemBase.call(this, type, x, y, f);
    js.addClass(this.getDiv(), "finishItem");
};
SharpKitWebApp.finishItemBase.prototype.showBall = function (ball, callback){
    var self = this;
    var div = this.getDiv();
    div.appendChild(ball.getDiv());
};
SharpKitWebApp.finishItemBase.prototype.isFinishItem = function (){
    return true;
};
$Inherit(SharpKitWebApp.finishItemBase, SharpKitWebApp.itemBase);
SharpKitWebApp.finishLeftItem = function (type, x, y, f){
    SharpKitWebApp.finishItemBase.call(this, type, x, y, f);
    js.addClass(this.getDiv(), "finishLeftItem");
};
SharpKitWebApp.finishLeftItem.prototype.hasSide = function (slide){
    var res = (slide == SharpKitWebApp.ESlide.left);
    return res;
};
SharpKitWebApp.finishLeftItem.prototype.getSlides = function (){
    var res =  [SharpKitWebApp.ESlide.left];
    return res;
};
SharpKitWebApp.finishLeftItem.prototype.moveBall = function (ball, callback){
    var self = this;
    var points =  [];
    points.push((function (){
        var $v35 = new SharpKitWebApp.point();
        $v35.set_x(SharpKitWebApp.itemBase.xMed);
        $v35.set_y(SharpKitWebApp.itemBase.yMed);
        $v35.set_inSide(SharpKitWebApp.ESlide.center);
        return $v35;
    }).call(this));
    for (var x = SharpKitWebApp.itemBase.xMed; x > SharpKitWebApp.itemBase.xMin; x--){
        points.push((function (){
            var $v36 = new SharpKitWebApp.point();
            $v36.set_x(x);
            $v36.set_y(SharpKitWebApp.itemBase.yMed);
            return $v36;
        }).call(this));
    }
    points.push((function (){
        var $v37 = new SharpKitWebApp.point();
        $v37.set_x(SharpKitWebApp.itemBase.xMin);
        $v37.set_y(SharpKitWebApp.itemBase.yMed);
        $v37.set_inSide(SharpKitWebApp.ESlide.left);
        return $v37;
    }).call(this));
    var div = this.getDiv();
    div.appendChild(ball.getDiv());
    this._moveBallInternal(ball, points, callback);
};
$Inherit(SharpKitWebApp.finishLeftItem, SharpKitWebApp.finishItemBase);
SharpKitWebApp.finishRightItem = function (type, x, y, f){
    SharpKitWebApp.finishItemBase.call(this, type, x, y, f);
    js.addClass(this.getDiv(), "finishRightItem");
};
SharpKitWebApp.finishRightItem.prototype.hasSide = function (slide){
    var res = (slide == SharpKitWebApp.ESlide.right);
    return res;
};
SharpKitWebApp.finishRightItem.prototype.getSlides = function (){
    var res =  [SharpKitWebApp.ESlide.right];
    return res;
};
SharpKitWebApp.finishRightItem.prototype.moveBall = function (ball, callback){
    var self = this;
    var points =  [];
    points.push((function (){
        var $v38 = new SharpKitWebApp.point();
        $v38.set_x(SharpKitWebApp.itemBase.xMed);
        $v38.set_y(SharpKitWebApp.itemBase.yMed);
        $v38.set_inSide(SharpKitWebApp.ESlide.center);
        return $v38;
    }).call(this));
    for (var x = SharpKitWebApp.itemBase.xMed; x < SharpKitWebApp.itemBase.xMax; x++){
        points.push((function (){
            var $v39 = new SharpKitWebApp.point();
            $v39.set_x(x);
            $v39.set_y(SharpKitWebApp.itemBase.yMed);
            return $v39;
        }).call(this));
    }
    points.push((function (){
        var $v40 = new SharpKitWebApp.point();
        $v40.set_x(SharpKitWebApp.itemBase.xMax);
        $v40.set_y(SharpKitWebApp.itemBase.yMed);
        $v40.set_inSide(SharpKitWebApp.ESlide.right);
        return $v40;
    }).call(this));
    var div = this.getDiv();
    div.appendChild(ball.getDiv());
    this._moveBallInternal(ball, points, callback);
};
$Inherit(SharpKitWebApp.finishRightItem, SharpKitWebApp.finishItemBase);
SharpKitWebApp.finishTopItem = function (type, x, y, f){
    SharpKitWebApp.finishItemBase.call(this, type, x, y, f);
    js.addClass(this.getDiv(), "finishTopItem");
};
SharpKitWebApp.finishTopItem.prototype.hasSide = function (slide){
    var res = (slide == SharpKitWebApp.ESlide.top);
    return res;
};
SharpKitWebApp.finishTopItem.prototype.getSlides = function (){
    var res =  [SharpKitWebApp.ESlide.top];
    return res;
};
SharpKitWebApp.finishTopItem.prototype.moveBall = function (ball, callback){
    var self = this;
    var points =  [];
    points.push((function (){
        var $v41 = new SharpKitWebApp.point();
        $v41.set_x(SharpKitWebApp.itemBase.xMed);
        $v41.set_y(SharpKitWebApp.itemBase.yMed);
        $v41.set_inSide(SharpKitWebApp.ESlide.center);
        return $v41;
    }).call(this));
    for (var y = SharpKitWebApp.itemBase.yMed; y > SharpKitWebApp.itemBase.yMin; --y){
        points.push((function (){
            var $v42 = new SharpKitWebApp.point();
            $v42.set_x(SharpKitWebApp.itemBase.xMed);
            $v42.set_y(y);
            return $v42;
        }).call(this));
    }
    points.push((function (){
        var $v43 = new SharpKitWebApp.point();
        $v43.set_x(SharpKitWebApp.itemBase.xMed);
        $v43.set_y(SharpKitWebApp.itemBase.yMin);
        $v43.set_inSide(SharpKitWebApp.ESlide.top);
        return $v43;
    }).call(this));
    var div = this.getDiv();
    div.appendChild(ball.getDiv());
    this._moveBallInternal(ball, points, callback);
};
$Inherit(SharpKitWebApp.finishTopItem, SharpKitWebApp.finishItemBase);
SharpKitWebApp.finishBottomItem = function (type, x, y, f){
    SharpKitWebApp.finishItemBase.call(this, type, x, y, f);
    js.addClass(this.getDiv(), "finishBottomItem");
};
SharpKitWebApp.finishBottomItem.prototype.hasSide = function (slide){
    var res = (slide == SharpKitWebApp.ESlide.bottom);
    return res;
};
SharpKitWebApp.finishBottomItem.prototype.getSlides = function (){
    var res =  [SharpKitWebApp.ESlide.bottom];
    return res;
};
SharpKitWebApp.finishBottomItem.prototype.moveBall = function (ball, callback){
    var self = this;
    var points =  [];
    points.push((function (){
        var $v44 = new SharpKitWebApp.point();
        $v44.set_x(SharpKitWebApp.itemBase.xMed);
        $v44.set_y(SharpKitWebApp.itemBase.yMed);
        $v44.set_inSide(SharpKitWebApp.ESlide.center);
        return $v44;
    }).call(this));
    for (var y = SharpKitWebApp.itemBase.yMed; y < SharpKitWebApp.itemBase.yMax; ++y){
        points.push((function (){
            var $v45 = new SharpKitWebApp.point();
            $v45.set_x(SharpKitWebApp.itemBase.xMed);
            $v45.set_y(y);
            return $v45;
        }).call(this));
    }
    points.push((function (){
        var $v46 = new SharpKitWebApp.point();
        $v46.set_x(SharpKitWebApp.itemBase.xMed);
        $v46.set_y(SharpKitWebApp.itemBase.yMax);
        $v46.set_inSide(SharpKitWebApp.ESlide.bottom);
        return $v46;
    }).call(this));
    var div = this.getDiv();
    div.appendChild(ball.getDiv());
    this._moveBallInternal(ball, points, callback);
};
$Inherit(SharpKitWebApp.finishBottomItem, SharpKitWebApp.finishItemBase);

